trigger:
- 'main'

variables:
  buildConfiguration: 'Release'
  leaderboardRepository: 'leaderboard'
  webRepository: 'web'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'secret'

stages:
- stage: 'Build'
  displayName: 'Build and push'
  jobs:  
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
    - task: Docker@2
      displayName: 'Build and push the web image to container registry'
      inputs:
        command: buildAndPush
        buildContext: $(Build.Repository.LocalPath)
        repository: $(webRepository)
        dockerfile: '$(Build.SourcesDirectory)/Tailspin.SpaceGame.Web/Dockerfile'
        containerRegistry: 'Container Registry Connection'
        tags: |
          $(tag)
    - task: Docker@2
      displayName: 'Build and push the leaderboard image to container registry'
      inputs:
        command: buildAndPush
        buildContext: $(Build.Repository.LocalPath)
        repository: $(leaderboardRepository)
        dockerfile: '$(Build.SourcesDirectory)/Tailspin.SpaceGame.LeaderboardContainer/Dockerfile'
        containerRegistry: 'Container Registry Connection'
        tags: |
          $(tag)

    - task: replacetokens@5
      displayName: Set Container Image Tags
      inputs:
        rootDirectory: 'manifests'
        targetFiles: '**/*.yml'
        encoding: 'auto'
        tokenPattern: 'default'
        writeBOM: true
        actionOnMissing: 'warn'
        keepToken: false
        actionOnNoFiles: 'warn'
        enableTransforms: false
        enableRecursion: false
        useLegacyPattern: false
        enableTelemetry: true

    - publish: '$(Build.SourcesDirectory)/manifests'
      artifact: manifests

- stage: 'Deploy'
  displayName: 'Update AKS Cluster'
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy to Dev Environment
    pool:
      vmImage: 'ubuntu-20.04'
    environment: 'Dev'
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: manifests
#  - job: 'DeployYamlFiles'
#    displayName: Deploy YAML files to AKS
#    steps:
#    - checkout: none
#    - download: current
#      artifact: manifests
#      displayName: Download Artifacts
          - task: KubernetesManifest@1
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              connectionType: azureResourceManager
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: 'Container Registry Connection'
              azureSubscriptionConnection: 'Kubernetes Cluster Connection'
              azureResourceGroup: 'tailspin-space-game-rg'
              kubernetesCluster: 'tailspinspacegame-21448'
              namespace: 'default'
          - task: KubernetesManifest@1
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              connectionType: azureResourceManager
              azureSubscriptionConnection: 'Kubernetes Cluster Connection'
              azureResourceGroup: 'tailspin-space-game-rg'
              kubernetesCluster: 'tailspinspacegame-21448'
              namespace: 'default'
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(RegistryName)/$(webRepository):$(tag)
                $(RegistryName)/$(leaderboardRepository):$(tag)        